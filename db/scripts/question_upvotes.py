# random datetime between two other: https://stackoverflow.com/questions/553303/generate-a-random-date-between-two-other-dates

import random
import os
from datetime import datetime
from datetime import timedelta

fileDir = os.path.dirname(os.path.realpath('__file__'))
filename = os.path.join(fileDir, '../sql/question_upvotes.sql')
filename = os.path.abspath(os.path.realpath(filename))
f = open(filename, "a", encoding='utf-8')

def dateTimeGen(datetim):
    date = datetim.split(' ')[0]
    time = datetim.split(' ')[1]
    dateparts = date.split('-')
    year = dateparts[0]
    month = dateparts[1]
    day = dateparts[2]
    timeparts = time.split(':')
    hours = timeparts[0]
    mins = timeparts[1]
    secs = timeparts[2]

    start = datetime(int(year), int(month), int(day), int(hours), int(mins), int(secs))
    end = datetime(2021, 6, 30, 22, 30, 30)
    delta = end-start
    int_delta = (delta.days * 24 * 60 * 60) + delta.seconds
    random_second = random.randrange(int_delta)
    return start+timedelta(seconds=random_second)

questions = [
    [1,"2021-03-18 16:45:16"],
    [2,"2021-04-28 20:41:35"],
    [3,"2021-02-27 06:41:15"],
    [4,"2021-01-02 22:12:18"],
    [5,"2021-03-24 18:43:55"],
    [6,"2021-03-10 21:44:22"],
    [7,"2020-10-20 00:18:53"],
    [8,"2021-03-23 22:47:02"],
    [9,"2020-07-20 01:40:26"],
    [10,"2021-02-04 01:35:14"],
    [11,"2020-08-16 20:50:29"],
    [12,"2020-12-15 23:07:18"],
    [13,"2021-05-11 05:08:45"],
    [14,"2020-07-08 20:00:48"],
    [15,"2021-03-08 10:16:18"],
    [16,"2021-04-09 06:04:58"],
    [17,"2021-03-13 08:26:17"],
    [18,"2021-05-16 15:41:02"],
    [19,"2021-01-16 09:50:11"],
    [20,"2021-01-20 20:17:36"],
    [21,"2021-01-03 08:51:11"],
    [22,"2020-06-20 17:09:29"],
    [23,"2021-03-05 11:15:16"],
    [24,"2021-02-10 13:54:43"],
    [25,"2021-03-05 08:19:10"],
    [26,"2021-05-23 15:43:25"],
    [27,"2021-02-04 23:01:04"],
    [28,"2021-05-27 04:29:46"],
    [29,"2021-02-18 12:35:16"],
    [30,"2021-03-20 07:05:16"],
    [31,"2020-10-16 08:44:27"],
    [32,"2021-05-26 17:42:10"],
    [33,"2021-04-13 23:37:13"],
    [34,"2021-04-12 10:03:10"],
    [35,"2021-01-10 12:49:53"],
    [36,"2021-03-22 05:00:12"],
    [37,"2021-01-17 10:45:09"],
    [38,"2020-06-24 10:00:31"],
    [39,"2021-03-10 12:09:22"],
    [40,"2021-05-23 05:57:17"],
    [41,"2021-01-08 06:17:48"],
    [42,"2021-05-14 23:34:01"],
    [43,"2021-04-28 00:14:33"],
    [44,"2020-01-13 17:33:23"],
    [45,"2020-04-07 11:15:13"],
    [46,"2020-01-08 20:59:26"],
    [47,"2020-11-15 10:56:43"],
    [48,"2021-04-08 18:48:00"],
    [49,"2021-04-06 07:35:23"],
    [50,"2021-05-13 10:25:15"],
    [51,"2021-03-21 21:38:09"],
    [52,"2020-02-01 00:59:05"],
    [53,"2021-01-03 14:21:55"],
    [54,"2020-06-22 08:48:09"],
    [55,"2021-02-02 21:44:54"],
    [56,"2020-10-14 03:01:18"],
    [57,"2021-01-07 02:27:17"],
    [58,"2021-05-25 11:39:57"],
    [59,"2021-02-15 21:40:25"],
    [60,"2021-02-06 17:18:03"],
    [61,"2021-04-26 13:30:20"],
    [62,"2021-04-25 05:00:41"],
    [63,"2021-04-05 12:54:13"],
    [64,"2021-01-28 01:51:13"],
    [65,"2021-01-14 21:27:09"],
    [66,"2021-01-15 13:11:48"],
    [67,"2021-05-19 05:36:29"],
    [68,"2021-03-17 08:45:04"],
    [69,"2021-01-20 12:08:54"],
    [70,"2021-02-25 18:18:46"],
    [71,"2021-01-21 23:49:19"],
    [72,"2021-04-19 07:41:36"],
    [73,"2020-10-06 12:35:18"],
    [74,"2021-01-19 01:11:53"],
    [75,"2021-01-02 20:41:58"],
    [76,"2021-04-16 17:48:47"],
    [77,"2021-04-19 00:37:34"],
    [78,"2021-03-20 17:30:52"],
    [79,"2021-03-28 23:58:10"],
    [80,"2021-02-16 05:46:52"],
    [81,"2021-03-09 06:47:04"],
    [82,"2021-04-26 17:27:27"],
    [83,"2021-02-14 04:20:23"],
    [84,"2021-04-16 05:33:14"],
    [85,"2021-05-28 20:52:17"],
    [86,"2021-01-16 16:31:23"],
    [87,"2021-01-12 03:35:37"],
    [88,"2021-02-18 05:41:13"],
    [89,"2021-03-20 23:29:25"],
    [90,"2020-11-15 10:37:38"],
    [91,"2021-02-26 03:50:24"],
    [92,"2021-03-19 14:32:03"],
    [93,"2020-06-24 15:05:27"],
    [94,"2020-07-03 07:51:47"],
    [95,"2020-10-19 21:10:31"],
    [96,"2020-11-27 10:01:22"],
    [97,"2020-04-11 11:46:21"],
    [98,"2020-03-04 05:55:10"],
    [99,"2021-03-13 06:30:28"],
    [100,"2020-06-24 15:38:02"],
    [101,"2020-10-17 19:40:24"],
    [102,"2021-03-28 01:31:35"],
    [103,"2021-04-20 20:40:19"],
    [104,"2020-03-15 01:50:12"],
    [105,"2021-05-05 05:47:39"],
    [106,"2021-04-20 10:11:40"],
    [107,"2021-02-04 01:16:15"],
    [108,"2021-05-17 23:43:03"],
    [109,"2021-03-20 06:35:32"],
    [110,"2021-02-16 09:30:25"],
    [111,"2020-12-04 12:11:39"],
    [112,"2021-01-10 18:10:30"],
    [113,"2020-11-26 06:47:17"],
    [114,"2021-04-24 19:38:33"],
    [115,"2021-01-23 23:08:29"],
    [116,"2020-02-08 19:21:12"],
    [117,"2021-03-04 10:38:18"],
    [118,"2021-05-02 21:51:35"],
    [119,"2020-04-14 01:13:48"],
    [120,"2021-02-16 01:55:46"],
    [121,"2021-03-25 15:34:57"],
    [122,"2021-01-16 22:17:53"],
    [123,"2021-02-06 13:20:51"],
    [124,"2021-03-28 23:17:53"],
    [125,"2021-03-12 13:07:40"],
    [126,"2021-05-26 03:43:12"],
    [127,"2021-01-21 04:44:05"],
    [128,"2020-11-11 02:37:28"],
    [129,"2020-10-01 05:39:46"],
    [130,"2021-01-13 08:13:36"],
    [131,"2021-03-18 05:26:43"],
    [132,"2021-02-07 19:41:49"],
    [133,"2021-04-27 20:18:15"] 
                ]

prefix = "INSERT INTO public.\"questionupvote\"(id, user_id, question_id, date) VALUES("
counter=1
for user_id in range(1, 52):
    questions_up = random.sample(questions, random.randrange(1,5))
    for question in questions_up:
        question_id = question[0]
        date = dateTimeGen(question[1])
        f.write(f"{prefix}{str(counter)}, {str(user_id)}, {str(question_id)}, '{date}');\n")
        counter+=1